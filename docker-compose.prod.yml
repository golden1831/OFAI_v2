version: '3'

services:
  # database
  db:
    image: postgres:10.5-alpine
    volumes:
      - ./data/postgresql/:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env.ofaigirls 
    container_name: postgres
    networks:
      - local
    restart: always

  # api
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile.api
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - DATABASE_HOST=${DATABASE_HOST}
    image: api
    container_name: api
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - local
    ports:
      - "3000:3000" # Caddy will automatically proxy requests to this service
    env_file:
      - .env.ofaigirls 
    depends_on:
      - db
    restart: always

  # client
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    image: client
    container_name: client
    ports:
      - "5173:5173" # Caddy will automatically proxy requests to this service
    env_file:
      - .env.ofaigirls 
    depends_on:
      - api
    networks:
      - local
    restart: always

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - local

  # Caddy server
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.ofaigirls:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - local
    restart: always

networks:
  local:
    driver: bridge

volumes:
  caddy_data:
  caddy_config: